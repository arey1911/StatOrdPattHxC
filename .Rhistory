col.names = c("Shannon", "Tsallis $\\beta=1.5$", "RÃ©nyi $\\beta=1.5$", "Fisher"),
escape = TRUE,
caption = "Asymptotic variances")
entropicTest(wn, x1, emb=4, ent="S") # Time series with different structure
entropicTest(x1, x2, emb=4, ent="S") # Time series with same structure
data("LinfLsup")
ggplot(subset(LinfLsup, Side=="Lower"),
aes(x=H, y=C, col=Dimension, group=Dimension)) +
geom_line() +
geom_line(data=subset(LinfLsup, Side=="Upper"),
aes(x=H, y=C, col=Dimension, group=Dimension)) +
xlab(expression(italic(H))) +
ylab(expression(italic(C))) +
theme_tufte()
data("LinfLsup")
D <- 4 # Embedding dimension
wnsub <- wn
x1sub <- x1
x2sub <- x2
ShannonEntropies <- c(
HShannon(OPprob(wnsub, emb=D)),
HShannon(OPprob(x1sub, emb=D)),
HShannon(OPprob(x2sub, emb=D))
)
StatisticalComplexities <- c(
StatComplexity(OPprob(wnsub, emb=D)),
StatComplexity(OPprob(x1sub, emb=D)),
StatComplexity(OPprob(x2sub, emb=D))
)
alpha <- 0.05
StandardDeviations <- sqrt(Variances[,1])
SemiLength <- StandardDeviations/sqrt(length(wnsub)-D)*qnorm(1-alpha/2)
# The three time series have the same length, but they could be different
HCPoints <- data.frame(H=ShannonEntropies,
C=StatisticalComplexities,
STD=StandardDeviations,
SemiLength=SemiLength,
Series=as.factor(c("White Noise", "Moving Average 1", "Moving Average 2")))
ggplot(subset(LinfLsup, Side=="Lower" & Dimension==as.character(D)),
aes(x=H, y=C)) +
geom_line() +
geom_line(data=subset(LinfLsup, Side=="Upper" & Dimension==as.character(D)),
aes(x=H, y=C)) +
xlab(expression(italic(H))) +
ylab(expression(italic(C))) +
geom_point(data=HCPoints, aes(x=H, y=C, col=Series)) +
geom_errorbarh(data=HCPoints, aes(xmin=H-SemiLength, xmax=H+SemiLength, group=Series, col=Series)) +
coord_cartesian(xlim=c(0.925, 1), ylim=c(0, 0.13)) +
theme_tufte()
n <- 4970-4
mu.wn <- meanC(OPprobs.wn, n)
sd.wn <- sqrt(varC(OPprobs.wn, n))
mu.x1 <- meanC(OPprobs.x1, n)
sd.x1 <- sqrt(varC(OPprobs.x1, n))
mu.x2 <- meanC(OPprobs.x2, n)
sd.x2 <- sqrt(varC(OPprobs.x2, n))
(Complexities <- data.frame(mu.wn, mu.x1, mu.x2))
(StandardDeviantionsComplexities <- data.frame(sd.wn, sd.x1, sd.x2))
alpha <- 0.05
SemiLength <- StandardDeviantionsComplexities/sqrt(n)*qnorm(1-alpha/2)
ComplexityMuSigmaMultinomial <- function(proportions, trials){
return(c(meanC(proportions, trials), sqrt(varC(proportions, trials))))
}
MuStd <- apply(X = Observations, MARGIN = 2, FUN = ComplexityMuSigmaMultinomial, trials=1000)
head(Observations)
for(r in 1:R){
(Observation <- rmultinom(1, size=size, prob=p))
}
for(r in 1:R){
(Observation <- rmultinom(1, size=size, prob=p))
}
Observation
for(r in 1:R){
Observation <- rmultinom(1, size=size, prob=p)
proportion <- Observation/sum(Observation)
cat(c(meanC(proportion, size), sqrt(varC(proportion, size))))
}
for(r in 1:R){
Observation <- rmultinom(1, size=size, prob=p)
proportion <- Observation/sum(Observation)
cat(c(meanC(proportion, size), sqrt(varC(proportion, size))), "\n")
}
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(10, lambda=3)
p <- p/sum(p)
R <- 500
size <- 1000
for(r in 1:R){
Observation <- rmultinom(1, size=size, prob=p)
proportion <- Observation/sum(Observation)
cat(c(meanC(proportion, size), sqrt(varC(proportion, size))), "\n")
}
n <- 4970-4
mu.wn <- meanC(OPprobs.wn, n)
sd.wn <- sqrt(varC(OPprobs.wn, n))
mu.x1 <- meanC(OPprobs.x1, n)
sd.x1 <- sqrt(varC(OPprobs.x1, n))
mu.x2 <- meanC(OPprobs.x2, n)
sd.x2 <- sqrt(varC(OPprobs.x2, n))
(Complexities <- data.frame(mu.wn, mu.x1, mu.x2))
(StandardDeviantionsComplexities <- data.frame(sd.wn, sd.x1, sd.x2))
alpha <- 0.05
SemiLength <- StandardDeviantionsComplexities/sqrt(n)*qnorm(1-alpha/2)
StandardDeviantionsComplexities.molten <- reshape2::melt(StandardDeviantionsComplexities,
value.name="Complexity",
variable.name = "Model")
Complexities.molten <- reshape2::melt(Complexities,
value.name="Complexity",
variable.name = "Model")
ggplot(Complexities, aes(x=Complexity, colour = Model)) +
geom_histogram() +
theme_tufte()
Complexities <- data.frame(mu.wn, mu.x1, mu.x2)
Complexities.molten <- reshape2::melt(Complexities,
value.name="Complexity",
variable.name = "Model")
ggplot(Complexities, aes(x=Complexity, colour = Model)) +
geom_histogram() +
theme_tufte()
ggplot(Complexities.molten, aes(x=Complexity, colour = Model)) +
geom_histogram() +
theme_tufte()
ggplot(Complexities.molten, aes(x=Complexity, colour = Model)) +
geom_histogram(bins = 50) +
theme_tufte()
ggplot(subset(Complexities.molten, Model!="mu.wn"), aes(x=Complexity, colour = Model)) +
geom_histogram(bins = 50) +
theme_tufte()
ggplot(subset(Complexities.molten, Model=="mu.wn"), aes(x=Complexity, colour = Model)) +
geom_histogram(bins = 50) +
theme_tufte()
Complexity.Asymptotic.Means <- data.frame(mu.wn, mu.x1, mu.x2)
Complexities.Asymptotic.StandardDeviantions <- data.frame(sd.wn, sd.x1, sd.x2)
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(10, lambda=3)
p <- p/sum(p)
R <- 500
size <- 1000
Observations <- rmultinom(R, size = size, prob=p)
Complexities <- apply(X=Observations, MARGIN=2, FUN=StatComplexity)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Observations, MARGIN=2, FUN=StatComplexity)
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram() +
theme_tufte()
FD.class
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(bins=nclass.FD(as.vector(Complexities))) +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
# stat_function(data=AsymptoticParameters,
#               fun=dnorm, args=list(mean=AsymptoticMean, sd=AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=0.0866, sd=0.00393)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(data=AsymptoticParameters,
fun=dnorm, args=list(mean=0.0866, sd=0.00393)) +
# geom_histogram(aes(y=after_stat(density)),
#                bins=nclass.FD(as.vector(Complexities)),
#                col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(fun=dnorm, args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="white") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(fun=dnorm, args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill="") +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
stat_function(fun=dnorm, args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
geom_histogram(aes(y=after_stat(density)),
bins=nclass.FD(as.vector(Complexities)),
col="black", fill=NULL) +
theme_tufte()
col="black", fill="white) +
col="black", fill="white) +
ggplot(data.frame(Complexities), aes(x=Complexities)) +
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density))
)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)))
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(10, lambda=3)
p <- p/sum(p)
R <- 500
size <- 5000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(10, lambda=3)
p <- p/sum(p)
R <- 300
size <- 5000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(10, lambda=3)
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=10)
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=10)
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, 1000),
AsymptoticStd = sqrt(varC(p, 1000))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=10)
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=5)
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=5)
p <- p/sum(p)
R <- 300
size <- 1000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- rpois(20, lambda=5)
p <- p/sum(p)
R <- 300
size <- 1000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
p <- 1:20
p <- p/sum(p)
R <- 300
size <- 1000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- 1:20
p <- p/sum(p)
R <- 300
size <- 2000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- 1:20
p <- p/sum(p)
R <- 300
size <- 5000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
set.seed(1234567890, kind="Mersenne-Twister")
p <- 1:20
p <- p/sum(p)
R <- 300
size <- 10000
AsymptoticParameters <- data.frame(
AsymptoticMean = meanC(p, size),
AsymptoticStd = sqrt(varC(p, size))
)
Observations <- rmultinom(R, size = size, prob=p)
Proportions <- apply(X=Observations, MARGIN=2, FUN = function(x) x/sum(x))
Complexities <- apply(X=Proportions, MARGIN=2, FUN=StatComplexity)
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
theme_tufte()
ggplot(data.frame(Complexities), aes(x=Complexities)) +
geom_histogram(aes(y=after_stat(density)),
fill="white", col="black",
bins=nclass.FD(as.vector(Complexities))) +
stat_function(fun=dnorm,
args=list(mean=AsymptoticParameters$AsymptoticMean, sd=AsymptoticParameters$AsymptoticStd)) +
ylab("Histogram and Asymptotic distribution") +
theme_tufte()
devtools::build_vignettes()
.Last.error
rm(list=ls())
devtools::build_vignettes()
detach("package:StatOrdPattHxC", unload = TRUE)
library(StatOrdPattHxC)
devtools::build_vignettes()
q(save="no")
